[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\nakamura\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\nakamura\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 11.0.2)
[debug]       Load.loadUnit: plugins took 234.6143ms
[debug]       Load.loadUnit: defsScala took 0.4805ms
[debug] [Loading] Scanning directory C:\Users\nakamura\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\nakamura\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 32.2152 ms
[debug]           Load.resolveProject(global-plugins) took 120.3059ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\nakamura\.sbt\1.0\plugins, plugins: List(<none>))) took 221.4365ms
[debug] [Loading] Done in C:\Users\nakamura\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 260.5343ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4209ms
[debug]     Load.loadUnit(file:/C:/Users/nakamura/.sbt/1.0/plugins/, ...) took 515.6388ms
[debug]   Load.apply: load took 834.3522ms
[debug]   Load.apply: resolveProjects took 15.3229ms
[debug]   Load.apply: finalTransforms took 128.2823ms
[debug]   Load.apply: config.delegates took 10.9453ms
[debug]   Load.apply: Def.make(settings)... took 722.9622ms
[debug]   Load.apply: structureIndex took 169.0793ms
[debug]   Load.apply: mkStreams took 2.3381ms
[info] loading global plugins from C:\Users\nakamura\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4360.8193ms
[debug]                 Load.loadUnit: plugins took 41.3229ms
[debug]                 Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\Users\nakamura\workspace\leetcode-study\project\project
[debug]                   Load.loadUnit: mkEval took 19.2349ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.8642 ms
[info] loading settings for project leetcode-study-build-build from plugin.sbt ...
[debug]                     Load.resolveProject(leetcode-study-build-build) took 19.7386ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id leetcode-study-build-build, base: C:\Users\nakamura\workspace\leetcode-study\project\project, plugins: List(<none>))) took 24.7002ms
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study\project\project, returning: (leetcode-study-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 107.0636ms
[debug]                 Load.loadUnit: cleanEvalClasses took 0.0182ms
[debug]               Load.loadUnit(file:/C:/Users/nakamura/workspace/leetcode-study/project/project/, ...) took 150.0754ms
[debug]             Load.apply: load took 152.2792ms
[debug]             Load.apply: resolveProjects took 0.1478ms
[debug]             Load.apply: finalTransforms took 15.7525ms
[debug]             Load.apply: config.delegates took 0.6478ms
[debug]             Load.apply: Def.make(settings)... took 204.4455ms
[debug]             Load.apply: structureIndex took 73.9108ms
[debug]             Load.apply: mkStreams took 0.0043ms
[info] loading project definition from C:\Users\nakamura\workspace\leetcode-study\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 880.0915ms
[debug]           Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory C:\Users\nakamura\workspace\leetcode-study\project
[debug]             Load.loadUnit: mkEval took 0.3458ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0756 ms
[info] loading settings for project leetcode-study-build from idea.sbt ...
[debug]               Load.resolveProject(leetcode-study-build) took 2.3372ms
[debug]             Load.loadTransitive: finalizeProject(Project(id leetcode-study-build, base: C:\Users\nakamura\workspace\leetcode-study\project, plugins: List(<none>))) took 6.4043ms
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study\project, returning: (leetcode-study-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 200.5132ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.1051ms
[debug]         Load.loadUnit(file:/C:/Users/nakamura/workspace/leetcode-study/project/, ...) took 1089.3889ms
[debug]       Load.apply: load took 1092.2716ms
[debug]       Load.apply: resolveProjects took 0.2025ms
[debug]       Load.apply: finalTransforms took 13.8211ms
[debug]       Load.apply: config.delegates took 0.56ms
[debug]       Load.apply: Def.make(settings)... took 114.6545ms
[debug]       Load.apply: structureIndex took 38.8677ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Users\nakamura\workspace\leetcode-study\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1605.4945ms
[debug]     Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\Users\nakamura\workspace\leetcode-study
[debug]       Load.loadUnit: mkEval took 0.382ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.6455 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 54.6315ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\nakamura\workspace\leetcode-study, plugins: List(<none>))) took 61.8412ms
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 204.1256ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.5311ms
[debug]   Load.loadUnit(file:/C:/Users/nakamura/workspace/leetcode-study/, ...) took 1819.2502ms
[debug] Load.apply: load took 1822.4674ms
[debug] Load.apply: resolveProjects took 0.1978ms
[debug] Load.apply: finalTransforms took 42.8569ms
[debug] Load.apply: config.delegates took 0.4775ms
[debug] Load.apply: Def.make(settings)... took 123.968ms
[debug] Load.apply: structureIndex took 37.3153ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to leetcode-study (in build file:/C:/Users/nakamura/workspace/leetcode-study/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63522 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63522, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to leetcode-study (in build file:/C:/Users/nakamura/workspace/leetcode-study/)
[debug] > Exec(idea-shell, None, None)
