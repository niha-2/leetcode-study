[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\nakamura\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\nakamura\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 11.0.2)
[debug]       Load.loadUnit: plugins took 402.5965ms
[debug]       Load.loadUnit: defsScala took 1.1684ms
[debug] [Loading] Scanning directory C:\Users\nakamura\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\nakamura\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 64.7557 ms
[debug]           Load.resolveProject(global-plugins) took 167.5772ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\nakamura\.sbt\1.0\plugins, plugins: List(<none>))) took 345.9889ms
[debug] [Loading] Done in C:\Users\nakamura\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 423.1249ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.9444ms
[debug]     Load.loadUnit(file:/C:/Users/nakamura/.sbt/1.0/plugins/, ...) took 861.4324ms
[debug]   Load.apply: load took 1435.5504ms
[debug]   Load.apply: resolveProjects took 28.2872ms
[debug]   Load.apply: finalTransforms took 222.2185ms
[debug]   Load.apply: config.delegates took 26.4252ms
[debug]   Load.apply: Def.make(settings)... took 1579.9101ms
[debug]   Load.apply: structureIndex took 341.136ms
[debug]   Load.apply: mkStreams took 3.5432ms
[info] loading global plugins from C:\Users\nakamura\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7700.3601ms
[debug]                 Load.loadUnit: plugins took 88.4655ms
[debug]                 Load.loadUnit: defsScala took 0.0129ms
[debug] [Loading] Scanning directory C:\Users\nakamura\workspace\leetcode-study\project\project
[debug]                   Load.loadUnit: mkEval took 22.2998ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.0723 ms
[info] loading settings for project leetcode-study-build-build from plugin.sbt ...
[debug]                     Load.resolveProject(leetcode-study-build-build) took 10.1088ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id leetcode-study-build-build, base: C:\Users\nakamura\workspace\leetcode-study\project\project, plugins: List(<none>))) took 17.8033ms
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study\project\project, returning: (leetcode-study-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 187.3759ms
[debug]                 Load.loadUnit: cleanEvalClasses took 0.0418ms
[debug]               Load.loadUnit(file:/C:/Users/nakamura/workspace/leetcode-study/project/project/, ...) took 285.3778ms
[debug]             Load.apply: load took 290.5298ms
[debug]             Load.apply: resolveProjects took 0.6203ms
[debug]             Load.apply: finalTransforms took 36.8756ms
[debug]             Load.apply: config.delegates took 1.3152ms
[debug]             Load.apply: Def.make(settings)... took 291.2844ms
[debug]             Load.apply: structureIndex took 92.0179ms
[debug]             Load.apply: mkStreams took 0.0065ms
[info] loading project definition from C:\Users\nakamura\workspace\leetcode-study\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 1323.1453ms
[debug]           Load.loadUnit: defsScala took 0.0108ms
[debug] [Loading] Scanning directory C:\Users\nakamura\workspace\leetcode-study\project
[debug]             Load.loadUnit: mkEval took 0.6903ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.9032 ms
[info] loading settings for project leetcode-study-build from idea.sbt ...
[debug]               Load.resolveProject(leetcode-study-build) took 4.8469ms
[debug]             Load.loadTransitive: finalizeProject(Project(id leetcode-study-build, base: C:\Users\nakamura\workspace\leetcode-study\project, plugins: List(<none>))) took 12.1699ms
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study\project, returning: (leetcode-study-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 399.2662ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.8618ms
[debug]         Load.loadUnit(file:/C:/Users/nakamura/workspace/leetcode-study/project/, ...) took 1740.6768ms
[debug]       Load.apply: load took 1746.8441ms
[debug]       Load.apply: resolveProjects took 0.335ms
[debug]       Load.apply: finalTransforms took 28.2172ms
[debug]       Load.apply: config.delegates took 0.9713ms
[debug]       Load.apply: Def.make(settings)... took 209.607ms
[debug]       Load.apply: structureIndex took 75.1586ms
[debug]       Load.apply: mkStreams took 0.0176ms
[info] loading project definition from C:\Users\nakamura\workspace\leetcode-study\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5342.5541ms
[debug]     Load.loadUnit: defsScala took 0.0088ms
[debug] [Loading] Scanning directory C:\Users\nakamura\workspace\leetcode-study
[debug]       Load.loadUnit: mkEval took 0.7416ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 8.8333 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 101.7942ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\nakamura\workspace\leetcode-study, plugins: List(<none>))) took 115.6769ms
[debug] [Loading] Done in C:\Users\nakamura\workspace\leetcode-study, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 9511.2636ms
[debug]     Load.loadUnit: cleanEvalClasses took 37.1655ms
[debug]   Load.loadUnit(file:/C:/Users/nakamura/workspace/leetcode-study/, ...) took 14892.8535ms
[debug] Load.apply: load took 14901.3882ms
[debug] Load.apply: resolveProjects took 0.3653ms
[debug] Load.apply: finalTransforms took 90.2039ms
[debug] Load.apply: config.delegates took 1.0535ms
[debug] Load.apply: Def.make(settings)... took 222.1376ms
[debug] Load.apply: structureIndex took 63.9389ms
[debug] Load.apply: mkStreams took 0.0053ms
[info] set current project to leetcode-study (in build file:/C:/Users/nakamura/workspace/leetcode-study/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50840 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50840, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to leetcode-study (in build file:/C:/Users/nakamura/workspace/leetcode-study/)
[debug] > Exec(idea-shell, None, None)
